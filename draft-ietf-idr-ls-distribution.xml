<?xml version="1.0" encoding="US-ASCII"?>
<!DOCTYPE rfc SYSTEM "rfc2629.dtd">
<?rfc toc="yes"?>
<?rfc tocompact="yes"?>
<?rfc tocdepth="3"?>
<?rfc tocindent="yes"?>
<?rfc symrefs="yes"?>
<?rfc sortrefs="yes"?>
<?rfc comments="yes"?>
<?rfc inline="yes"?>
<?rfc compact="yes"?>
<?rfc subcompact="no"?>
<rfc category="std" docName="draft-ietf-idr-ls-distribution-03"
     ipr="trust200902">
  <front>
    <title abbrev="Link-State Info Distribution using BGP">North-Bound
    Distribution of Link-State and TE Information using BGP</title>

    <author fullname="Hannes Gredler" initials="H." surname="Gredler">
      <organization>Juniper Networks, Inc.</organization>
      <address>
        <postal>
          <street>1194 N. Mathilda Ave.</street>
          <city>Sunnyvale</city>
          <region>CA</region>
          <code>94089</code>
          <country>US</country>
        </postal>
        <email>hannes@juniper.net</email>
      </address>
    </author>

    <author fullname="Jan Medved" initials="J." surname="Medved">
      <organization>Cisco Systems, Inc.</organization>
      <address>
        <postal>
          <street>170, West Tasman Drive</street>
          <city>San Jose</city>
          <region>CA</region>
          <code>95134</code>
          <country>US</country>
        </postal>
        <email>jmedved@cisco.com</email>
      </address>
    </author>

    <author fullname="Stefano Previdi" initials="S." surname="Previdi">
      <organization>Cisco Systems, Inc.</organization>
      <address>
        <postal>
          <street>Via Del Serafico, 200</street>
          <city>Rome</city>
          <code>00142</code>
          <country>Italy</country>
        </postal>
        <email>sprevidi@cisco.com</email>
      </address>
    </author>

    <author fullname="Adrian Farrel" initials="A." surname="Farrel">
      <organization>Juniper Networks, Inc.</organization>
      <address>
        <postal>
          <street>1194 N. Mathilda Ave.</street>
          <city>Sunnyvale</city>
          <region>CA</region>
          <code>94089</code>
          <country>US</country>
        </postal>
        <email>afarrel@juniper.net</email>
      </address>
    </author>

    <author fullname="Saikat Ray" initials="S." surname="Ray">
      <organization>Cisco Systems, Inc.</organization>
      <address>
        <postal>
          <street>170, West Tasman Drive</street>
          <city>San Jose</city>
          <region>CA</region>
          <code>95134</code>
          <country>US</country>
        </postal>
        <email>sairay@cisco.com</email>
      </address>
    </author>

    <date day="20" month="March" year="2013" />

    <workgroup>Inter-Domain Routing</workgroup>

    <abstract>
      <t>In a number of environments, a component external to a network is
      called upon to perform computations based on the network topology and
      current state of the connections within the network, including traffic
      engineering information. This is information typically distributed by
      IGP routing protocols within the network</t>

      <t>This document describes a mechanism by which links state and traffic
      engineering information can be collected from networks and shared with
      external components using the BGP routing protocol. This is achieved
      using a new BGP Network Layer Reachability Information (NLRI) encoding
      format. The mechanism is applicable to physical and virtual links. The
      mechanism described is subject to policy control.</t>

      <t>Applications of this technique include Application Layer Traffic
      Optimization (ALTO) servers, and Path Computation Elements (PCEs).</t>
    </abstract>

    <note title="Requirements Language">
      <t>The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
      "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this
      document are to be interpreted as described in <xref
      target="RFC2119">RFC 2119</xref>.</t>
    </note>
  </front>

  <middle>
    <section title="Introduction">
      <t>The contents of a Link State Database (LSDB) or a Traffic Engineering
      Database (TED) has the scope of an IGP area. Some applications, such as
      end-to-end Traffic Engineering (TE), would benefit from visibility
      outside one area or Autonomous System (AS) in order to make better
      decisions.</t>

      <t>The IETF has defined the Path Computation Element (PCE) <xref
      target="RFC4655"></xref> as a mechanism for achieving the computation of
      end-to-end TE paths that cross the visibility of more than one TED or
      which require CPU-intensive or coordinated computations. The IETF has
      also defined the ALTO Server <xref target="RFC5693"></xref> as an entity
      that generates an abstracted network topology and provides it to
      network-aware applications.</t>

      <t>Both a PCE and an ALTO Server need to gather information about the
      topologies and capabilities of the network in order to be able to
      fulfill their function</t>

      <t>This document describes a mechanism by which Link State and TE
      information can be collected from networks and shared with external
      components using the BGP routing protocol <xref
      target="RFC4271"></xref>. This is achieved using a new BGP Network Layer
      Reachability Information (NLRI) encoding format. The mechanism is
      applicable to physical and virtual links. The mechanism described is
      subject to policy control.</t>

      <t>A router maintains one or more databases for storing link-state
      information about nodes and links in any given area. Link attributes
      stored in these databases include: local/remote IP addresses,
      local/remote interface identifiers, link metric and TE metric, link
      bandwidth, reservable bandwidth, per CoS class reservation state,
      preemption and Shared Risk Link Groups (SRLG). The router's BGP process
      can retrieve topology from these LSDBs and distribute it to a consumer,
      either directly or via a peer BGP Speaker (typically a dedicated Route
      Reflector), using the encoding specified in this document.</t>

      <t>The collection of Link State and TE link state information and its
      distribution to consumers is shown in the following figure.</t>

      <figure anchor="MECHANISM-OVERVIEW"
              title="TE Link State info collection">
        <artwork>
                        +-----------+
                        | Consumer  |
                        +-----------+
                              ^
                              |
                        +-----------+
                        |    BGP    |               +-----------+
                        |  Speaker  |               | Consumer  |
                        +-----------+               +-----------+
                          ^   ^   ^                       ^
                          |   |   |                       |
          +---------------+   |   +-------------------+   |
          |                   |                       |   |
    +-----------+       +-----------+             +-----------+
    |    BGP    |       |    BGP    |             |    BGP    |
    |  Speaker  |       |  Speaker  |    . . .    |  Speaker  |
    +-----------+       +-----------+             +-----------+
          ^                   ^                         ^
          |                   |                         |
         IGP                 IGP                       IGP
	  </artwork>
      </figure>

      <t>A BGP Speaker may apply configurable policy to the information that
      it distributes. Thus, it may distribute the real physical topology from
      the LSDB or the TED. Alternatively, it may create an abstracted
      topology, where virtual, aggregated nodes are connected by virtual
      paths. Aggregated nodes can be created, for example, out of multiple
      routers in a POP. Abstracted topology can also be a mix of physical and
      virtual nodes and physical and virtual links. Furthermore, the BGP
      Speaker can apply policy to determine when information is updated to the
      consumer so that there is reduction of information flow form the network
      to the consumers. Mechanisms through which topologies can be aggregated
      or virtualized are outside the scope of this document</t>
    </section>

    <section title="Motivation and Applicability">
      <t>This section describes uses cases from which the requirements can be
      derived.</t>

      <section title="MPLS-TE with PCE">
        <t>As described in <xref target="RFC4655"></xref> a PCE can be used to
        compute MPLS-TE paths within a "domain" (such as an IGP area) or
        across multiple domains (such as a multi-area AS, or multiple ASes).
        <list style="symbols">
            <t>Within a single area, the PCE offers enhanced computational
            power that may not be available on individual routers,
            sophisticated policy control and algorithms, and coordination of
            computation across the whole area.</t>

            <t>If a router wants to compute a MPLS-TE path across IGP areas
            its own TED lacks visibility of the complete topology. That means
            that the router cannot determine the end-to-end path, and cannot
            even select the right exit router (Area Border Router - ABR) for
            an optimal path. This is an issue for large-scale networks that
            need to segment their core networks into distinct areas, but which
            still want to take advantage of MPLS-TE.</t>
          </list></t>

        <t>Previous solutions used per-domain path computation <xref
        target="RFC5152"></xref>. The source router could only compute the
        path for the first area because the router only has full topological
        visibility for the first area along the path, but not for subsequent
        areas. Per-domain path computation uses a technique called
        "loose-hop-expansion" <xref target="RFC3209"></xref>, and selects the
        exit ABR and other ABRs or AS Border Routers (ASBRs) using the IGP
        computed shortest path topology for the remainder of the path. This
        may lead to sub-optimal paths, makes alternate/back-up path
        computation hard, and might result in no TE path being found when one
        really does exist.</t>

        <t>The PCE presents a computation server that may have visibility into
        more than one IGP area or AS, or may cooperate with other PCEs to
        perform distributed path computation. The PCE obviously needs access
        to the TED for the area(s) it serves, but <xref
        target="RFC4655"></xref> does not describe how this is achieved. Many
        implementations make the PCE a passive participant in the IGP so that
        it can learn the latest state of the network, but this may be
        sub-optimal when the network is subject to a high degree of churn, or
        when the PCE is responsible for multiple areas.</t>

        <t>The following figure shows how a PCE can get its TED information
        using the mechanism described in this document.</t>

        <figure anchor="PCE-REFERENCE"
                title="External PCE node using a TED synchronization mechanism">
          <artwork>
             +----------+                           +---------+
             |  -----   |                           |   BGP   |
             | | TED |&lt;-+--------------------------&gt;| Speaker |
             |  -----   |   TED synchronization     |         |
             |    |     |        mechanism:         +---------+
             |    |     | BGP with Link-State NLRI
             |    v     |
             |  -----   |
             | | PCE |  |
             |  -----   |
             +----------+
                  ^
                  | Request/
                  | Response
                  v
    Service  +----------+   Signaling  +----------+
    Request  | Head-End |   Protocol   | Adjacent |
    --------&gt;|  Node    |&lt;------------&gt;|   Node   |
             +----------+              +----------+
	  </artwork>
        </figure>

        <t>The mechanism in this document allows the necessary TED information
        to be collected from the IGP within the network, filtered according to
        configurable policy, and distributed to the PCE as necessary.</t>
      </section>

      <section title="ALTO Server Network API">
        <t>An ALTO Server <xref target="RFC5693"></xref> is an entity that
        generates an abstracted network topology and provides it to
        network-aware applications over a web service based API. Example
        applications are p2p clients or trackers, or CDNs. The abstracted
        network topology comes in the form of two maps: a Network Map that
        specifies allocation of prefixes to Partition Identifiers (PIDs), and
        a Cost Map that specifies the cost between PIDs listed in the Network
        Map. For more details, see <xref
        target="I-D.ietf-alto-protocol"></xref>.</t>

        <t>ALTO abstract network topologies can be auto-generated from the
        physical topology of the underlying network. The generation would
        typically be based on policies and rules set by the operator. Both
        prefix and TE data are required: prefix data is required to generate
        ALTO Network Maps, TE (topology) data is required to generate ALTO
        Cost Maps. Prefix data is carried and originated in BGP, TE data is
        originated and carried in an IGP. The mechanism defined in this
        document provides a single interface through which an ALTO Server can
        retrieve all the necessary prefix and network topology data from the
        underlying network. Note an ALTO Server can use other mechanisms to
        get network data, for example, peering with multiple IGP and BGP
        Speakers.</t>

        <t>The following figure shows how an ALTO Server can get network
        topology information from the underlying network using the mechanism
        described in this document.</t>

        <figure anchor="ALTO-REFERENCE"
                title="ALTO Server using network topology information">
          <artwork>
  +--------+
  | Client |&lt;--+
  +--------+   |                  
               |    ALTO    +--------+     BGP with    +---------+
  +--------+   |  Protocol  |  ALTO  | Link-State NLRI |   BGP   |  
  | Client |&lt;--+------------| Server |&lt;----------------| Speaker | 
  +--------+   |            |        |                 |         |
               |            +--------+                 +---------+
  +--------+   |
  | Client |&lt;--+
  +--------+           
	  </artwork>
        </figure>
      </section>
    </section>

    <section title="Carrying Link State Information in BGP">
      <t>This specification contains two parts: definition of a new BGP NLRI
      that describes links, nodes and prefixes comprising IGP link state
      information, and definition of a new BGP path attribute that carries
      link, node and prefix properties and attributes, such as the link and
      prefix metric or node properties.</t>

      <section anchor="TLV-section" title="TLV Format">
        <t>Information in the new link state NLRIs and attributes is encoded
        in Type/Length/Value triplets. The TLV format is shown in <xref
        target="TLV-figure"></xref>.</t>

        <figure anchor="TLV-figure" title="TLV format">
          <artwork>
   0                   1                   2                   3
   0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
  |              Type             |             Length            | 
  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
  //                        Value (variable)                     //
  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
  </artwork>
        </figure>

        <t>The Length field defines the length of the value portion in octets
        (thus a TLV with no value portion would have a length of zero). The
        TLV is not padded to four-octet alignment. Unrecognized types are
        ignored.</t>
      </section>

      <section title="The Link State NLRI">
        <t>The MP_REACH and MP_UNREACH attributes are BGP's containers for
        carrying opaque information. Each Link State NLRI describes either a
        node, a link or a prefix.</t>

        <t>All link, node and prefix information SHALL be encoded using
        AFI 16388 / SAFI 71 header into those attributes. VPN link, node and
	prefix information SHALL be encoded using AFI 16388 / SAFI 128</t>

        <t>In order for two BGP speakers to exchange Link-State NLRI, they
        MUST use BGP Capabilities Advertisement to ensure that they both are
        capable of properly processing such NLRI. This is done as specified in
        <xref target="RFC4760"></xref>, by using capability code 1
        (multi-protocol BGP), with an AFI 16388 / SAFI 71 and
	AFI 16388 / SAFI 128 for the VPN flavor.</t>

        <t>The format of the Link State NLRI is shown in the following
        figure.</t>

        <figure anchor="LSSAFI" title="Link State AFI 16388 / SAFI 71 NLRI Format">
          <artwork>
   0                   1                   2                   3
   0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
  |            NLRI Type          |     Total NLRI Length         |
  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
  |                                                               |
  //                  Link-State NLRI (variable)                 //
  |                                                               |
  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
  </artwork>
        </figure>

        <figure anchor="LSVPNSAFI" title="Link State VPN AFI 16388 / SAFI 128 NLRI Format">
          <artwork>
   0                   1                   2                   3
   0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
  |            NLRI Type          |     Total NLRI Length         |
  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
  |                                                               |
  +                       Route Distinguisher                     +
  |                                                               |
  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
  |                                                               |
  //                  Link-State NLRI (variable)                 //
  |                                                               |
  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
    </artwork>
        </figure>

        <t>The 'Total NLRI Length' field contains the cumulative length of
        rest of the NLRI not including the NLRI Type field or itself. For VPN
        applications it also includes the length of the Route
        Distinguisher.</t>

        <t>The 'NLRI Type' field can contain one of the following values:
        <list style="hanging">
            <t>Type = 1: Link NLRI</t>
            <t>Type = 2: Node NLRI</t>
            <t>Type = 3: IPv4 Topology Prefix NLRI</t>
            <t>Type = 4: IPv6 Topology Prefix NLRI</t>
          </list></t>

        <t>The Link NLRI (NLRI Type = 1) is shown in the following figure.</t>

        <figure anchor="LINK-NLRI" title="The Link NLRI format">
          <artwork>
   0                   1                   2                   3
   0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
  +-+-+-+-+-+-+-+-+  
  |  Protocol-ID  |
  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
  |                           Identifier                          |
  |                            (64 bits)                          |
  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+       
  |                Local Node Descriptors (variable)              |
  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
  |                Remote Node Descriptors (variable)             |
  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
  |                   Link Descriptors (variable)                 |
  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
  </artwork>
        </figure>

        <t>The Node NLRI (NLRI Type = 2) is shown in the following figure.</t>

        <figure anchor="NODE-NLRI" title="The Node NLRI format">
          <artwork>
   0                   1                   2                   3
   0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
  +-+-+-+-+-+-+-+-+  
  |  Protocol-ID  |
  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
  |                           Identifier                          |
  |                            (64 bits)                          |
  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
  |                Local Node Descriptors (variable)              |
  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
  </artwork>
        </figure>

        <t>The IPv4 and IPv6 Prefix NLRIs (NLRI Type = 3 and Type = 4) use the
        same format as shown in the following figure.</t>

        <figure anchor="PREFIX-NLRI"
                title="The IPv4/IPv6 Topology Prefix NLRI format">
          <artwork>
   0                   1                   2                   3
   0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
  +-+-+-+-+-+-+-+-+  
  |  Protocol-ID  |
  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
  |                           Identifier                          |
  |                            (64 bits)                          |
  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
  |               Local Node Descriptor (variable)                |
  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
  |                 Prefix Descriptors (variable)                 |
  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
  </artwork>
        </figure>

        <t>The 'Protocol-ID' field can contain one of the following values:
        <list style="hanging">
            <t>Protocol-ID = 0: Unknown, The source of NLRI information could
            not be determined</t>

            <t>Protocol-ID = 1: IS-IS Level 1, The NLRI information has been
            sourced by IS-IS Level 1</t>

            <t>Protocol-ID = 2: IS-IS Level 2, The NLRI information has been
            sourced by IS-IS Level 2</t>

            <t>Protocol-ID = 3: OSPF, The NLRI information has been sourced by
            OSPF</t>

            <t>Protocol-ID = 4: Direct, The NLRI information has been sourced
            from local interface state</t>

            <t>Protocol-ID = 5: Static, The NLRI information has been sourced
            by static configuration</t>
          </list></t>

        <t>Both OSPF and IS-IS may run multiple routing protocol instances
        over the same link. See <xref target="RFC6822"></xref> and <xref
        target="RFC6549"></xref>.</t>

        <t>The 64-Bit 'Identifier' field is used to associate the NLRI to an IGP
        routing instance and domain.
	</t>

        <t>Each Node Descriptor and Link Descriptor consists of one or more TLVs
        described in the following sections. The sender of an UPDATE message
        MUST order the TLVs within a Node, Link Descriptor or a Prefix Descriptor in
        ascending order of TLV type.</t>


        <section title="Node Descriptors">
          <t>Each link gets anchored by at least a pair of router-IDs. Since
          there are many Router-IDs formats (32 Bit IPv4 router-ID, 48 Bit ISO
          System-ID and 128 Bit IPv6 router-ID) a link may be anchored by more
          than one Router-ID pair. The set of Local and Remote Node
          Descriptors describe which Protocols Router-IDs will be following to
          "anchor" the link described by the "Link attribute TLVs". There must
          be at least one "like" router-ID pair of a Local Node Descriptors
          and a Remote Node Descriptors per-protocol. If a peer sends an
          illegal combination in this respect, then this is handled as an NLRI
          error, described in <xref target="RFC4760"></xref>.</t>

          <t>It is desirable that the Router-ID assignments inside the Node
          anchor are globally unique. However there may be router-ID spaces
          (e.g. ISO) where not even a global registry exists, or worse,
          Router-IDs have been allocated following private-IP <xref
          target="RFC1918">RFC 1918</xref> allocation. We use AS Number
	  and BGP Identifier in order to disambiguate the
          Router-IDs, as described in <xref
          target="gbl_uniqueness"></xref>.</t>

          <section anchor="gbl_uniqueness"
                   title="Globally Unique Node/Link/Prefix Identifiers">
            <t>One problem that needs to be addressed is the ability to
            identify an IGP node globally (by "global", we mean within the
            BGP-LS database collected by all BGP-LS speakers that talk to each
            other). This can be expressed through the following two
            requirements:</t>

            <t>(A) The same node must not be represented by two keys
            (otherwise one node will look like two nodes).</t>

            <t>(B) Two different nodes must not be represented by the same key
            (otherwise, two nodes will look like one node).</t>

            <t>We define an "IGP domain" to be the set of nodes, links and prefixes,
            within which, each node has a unique IGP representation by using
            the combination of Area-ID, Router-ID, Protocol, Topology-ID, Instance ID,
            etc. The problem is that BGP may receive node/link/prefix information
	    from multiple
            independent "IGP domains" and we need to distinguish between them.
            Moreover, we can't assume there is always one and only one IGP
            domain per Autonomous System. During IGP Protocol transitions it
	    may happen that two redundant IGPs are in place.
	    </t>

	    <t>In section <xref target="node_desc_tlvs"></xref>
	    a set of subTLVs is described, which
	    allows to specify a flexible key for any given Node/Link information
	    such that global uniqueness of the NLRI is ensured.
	    </t>
	  </section>

          <section anchor="LOCALNODEDESC" title="Local Node Descriptors">
            <t>The Local Node Descriptors TLV contains Node Descriptors for the
            node anchoring the local end of the link. The length of this TLV is
            variable. The value contains one or more Node Descriptor Sub-TLVs
            defined in <xref target="node_desc_tlvs"></xref>.</t>

            <figure anchor="LOCALNODEDESCTLV"
                    title="Local Node Descriptors TLV format">
              <artwork>
   0                   1                   2                   3
   0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
  |              Type             |             Length            | 
  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
  |                                                               |
  |               Node Descriptor Sub-TLVs (variable)             |
  |                                                               |
  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
  </artwork>
            </figure>
          </section>

          <section anchor="REMOTENODEDESC" title="Remote Node Descriptors">
            <t>The Remote Node Descriptors TLV contains Node Descriptors for the
            node anchoring the remote end of the link. The length of this TLV is
            variable. The value contains one or more Node Descriptor Sub-TLVs
            defined in <xref target="node_desc_tlvs"></xref>.</t>

            <figure anchor="REMOTENODEDESCTLV"
                    title="Remote Node Descriptors TLV format">
              <artwork>
   0                   1                   2                   3
   0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
  |              Type             |             Length            | 
  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
  |                                                               |
  //              Node Descriptor Sub-TLVs (variable)            //
  |                                                               |
  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
  </artwork>
            </figure>
          </section>

          <section anchor="node_desc_tlvs" title="Node Descriptor Sub-TLVs">
            <t>The Node Descriptor Sub-TLV type codepoints and lengths are
            listed in the following table:</t>

            <texttable anchor="table_local_anchor_node_tlv"
                       title="Node Descriptor Sub-TLVs">
              <ttcol align="center">SubTLV Code Point</ttcol>
              <ttcol align="left">Description</ttcol>
              <ttcol align="right">Length</ttcol>

              <c>512</c>
              <c>Autonomous System</c>
              <c>4</c>

              <c>513</c>
              <c>BGP Identifier</c>
              <c>4</c>

<!--FIXME since we have now a 64-bit instance ID - do we need the BGP ID at all ?
Jan: Yes we do - the 64 bit instance ID is opaque, It may or may not include the 
BGP ID and the AS#: should we mandate it? -->

              <c>514</c>
              <c>ISO System ID + PSN</c>
              <c>7</c>

              <c>515</c>
              <c>IPv4 Router-ID + PSN</c>
              <c>5</c>

              <c>516</c>
              <c>IPv6 Router-ID + PSN</c>
              <c>17</c>

              <c>517</c>
              <c>Area-ID</c>
              <c>4</c>

              <c>518</c>
              <c>Multi-Topology-ID</c>
              <c>4</c>

            </texttable>

            <t>The subTLV values in Node Descriptor TLVs are defined as
            follows:</t>

            <t><list style="hanging">
              <t hangText="Autonomous System:">opaque value (32 Bit AS
              Number)</t>

              <t hangText="BGP-Identifier:">opaque value (32 Bit ID);
              uniquely identifying the BGP-LS speaker within an AS.</t>

              <t hangText="ISO Node ID:">ISO node-ID (6 octets ISO system-ID)
              followed by a PSN octet in case LAN "Pseudonode" information gets
              advertised. The PSN octet MUST be zero for non-LAN
              "Pseudonodes".</t>

              <t hangText="IPv4 Router ID:">opaque value (can be an IPv4 address
              or an 32 Bit router ID) followed by a Pseudonode octet. The
              Pseudonode octet is used to discriminate a Pseudonode from a Real
              Node for LANs.  An Implementation MUST set the Pseudonode Byte to
              zero for Non Pseudonodes. An Implementation SHOULD set the
              Pseudonode Byte to non-zero for a Node representing a LAN. When
              encoding a Pseudonode for OSPF the router-ID is the IP Address of
              the Designated Router.  To disambiguate The Pseudonode with a
              non-Pseudonode router the Pseudonode Byte should be set to 1.</t>

              <t hangText="IPv6 Router ID:">opaque value (can be an IPv6 address
              or an 128 Bit router ID) followed by a Pseudonode octet. The
              Pseudonode octet is used to discriminate a Pseudonode from a Real
              Node for LANs.  An Implementation MUST set the Pseudonode Byte to
              zero for Non Pseudonodes. An Implementation SHOULD set the
              Pseudonode Byte to non-zero for a Node representing a LAN. When
              encoding a Pseudonode for OSPF the router-ID is the IP Address of
              the Designated Router.  To disambiguate The Pseudonode with a
              non-Pseudonode router the Pseudonode Byte should be set to 1.</t>

              <t hangText="Area ID:">It is used to identify the 32 Bit area to
              which the NLRI belongs. Area Identifier allows the different NLRIs
              of the same router to be discriminated.
              </t>
		
              <t hangText="MT-ID:">carries the Multi Topology ID for the link,
              node or prefix. Semantics of the IS-IS Multi Topology ID are
              defined in <xref target="RFC5120">RFC5120, Section 7.2</xref>.
              Semantics of the OSPF Multi Topology ID are defined in <xref
              target="RFC4915">RFC4915, Section 3.7</xref>. If the value in the
              Multi Topology ID TLV is derived from OSPF, then the upper 9 bits
              of the Multi Topology ID are set to 0.

              <figure anchor="MTIDTLV" title="Multi Topology ID TLV format">
                <artwork>
   0                   1                   2                   3
   0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
  |              Type             |             Length            | 
  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
  |R R R R|   Multi Topology ID   | 
  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
                </artwork>
              </figure>

              The Multi Topology Identifier SubTLV MAY be present in any NLRI
              Type.</t>

              <t>There can be at most one instance of each subTLV type present
              in any Node Descriptor. The TLV ordering within a Node descriptor
              MUST be kept in order of increasing numeric value of type. This
              needs to be done in order to compare NLRIs, even when a
              implementation would encounter a unknown subTLV. Using stable
              sorting an implementation can do a binary compare of NLRIs and
              hence allow incremental deployment of new key subTLVs.</t>
            </list>
            </t>
          </section>

          <section title="Router-ID Anchoring Example: ISO Pseudonode">
            <t>IS-IS Pseudonodes are a good example for the variable Router-ID
            anchoring. Consider <xref target="ISISPseudonodes"></xref>. This
            represents a Broadcast LAN between a pair of routers. The "real"
            (=non pseudonode) routers have both an IPv4 Router-ID and IS-IS
            Node-ID. The pseudonode does not have an IPv4 Router-ID. Two
            unidirectional links (Node1, Pseudonode 1) and (Pseudonode 1, Node
            2) are being generated.</t>

            <t>The NRLI for (Node1, Pseudonode1) encodes local IPv4 router-ID,
            local ISO node-ID and remote ISO node-id)</t>

            <t>The NLRI for (Pseudonode1, Node2) encodes a local ISO node-ID
            and remote ISO node-id.</t>

            <figure anchor="ISISPseudonodes" title="IS-IS Pseudonodes">
              <artwork>
  +-----------------+    +-----------------+    +-----------------+
  |      Node1      |    |   Pseudonode 1  |    |      Node2      |
  |1920.0000.2001.00|---&gt;|1920.0000.2001.02|---&gt;|1920.0000.2002.00|
  |     192.0.2.1   |    |                 |    |     192.0.2.2   |
  +-----------------+    +-----------------+    +-----------------+
  </artwork>
            </figure>
          </section>

          <section title="Router-ID Anchoring Example: OSPFv2 to IS-IS Migration">
            <t>Migrating gracefully from one IGP to another requires congruent
            operation of both routing protocols during the migration period.
            The target protocol (IS-IS) supports more router-ID spaces than
            the source (OSPFv2) protocol. When advertising a point-to-point
            link between an OSPFv2-only router and an OSPFv2 and IS-IS enabled
            router the following link information may be generated. Note that
            the IS-IS router also supports the IPv6 traffic engineering
            extensions <xref target="RFC6119">RFC 6119</xref> for IS-IS.</t>

            <t>The NRLI encodes local IPv4 router-id, remote IPv4 router-id,
            remote ISO node-id and remote IPv6 node-id.</t>
          </section>
        </section>

        <section title="Link Descriptors">
          <t>The 'Link Descriptor' field is a set of Type/Length/Value (TLV)
          triplets. The format of each TLV is shown in <xref
          target="TLV-section"></xref>. The 'Link descriptor' TLVs uniquely
          identify a link between a pair of anchor Routers. A link described
          by the Link descriptor TLVs actually is a "half-link", a
          unidirectional representation of a logical link. In order to fully
          describe a single logical link two originating routers need to
          advertise a half-link each, i.e. two link NLRIs will be
          advertised.</t>

          <t>The format and semantics of the 'value' fields in most 'Link
          Descriptor' TLVs correspond to the format and semantics of value
          fields in IS-IS Extended IS Reachability sub-TLVs, defined in <xref
          target="RFC5305"></xref>, <xref target="RFC5307"></xref> and <xref
          target="RFC6119"></xref>. Although the encodings for 'Link
          Descriptor' TLVs were originally defined for IS-IS, the TLVs can
          carry data sourced either by IS-IS or OSPF.</t>

          <t>The following link descriptor TLVs are valid in the Link
          NLRI:</t>

          <texttable anchor="table_link_descriptor_tlv"
                     title="Link Descriptor TLVs">
            <ttcol align="center">TLV Code Point</ttcol>
            <ttcol align="left">Description</ttcol>
            <ttcol align="center">IS-IS TLV/Sub-TLV</ttcol>
            <ttcol align="left">Value defined in:</ttcol>

            <c>258</c>
            <c>Link Local/Remote Identifiers</c>
            <c>22/4</c>
            <c><xref target="RFC5307"></xref>/1.1</c>

            <c>259</c>
            <c>IPv4 interface address</c>
            <c>22/6</c>
            <c><xref target="RFC5305"></xref>/3.2</c>

            <c>260</c>
            <c>IPv4 neighbor address</c>
            <c>22/8</c>
            <c><xref target="RFC5305"></xref>/3.3</c>

            <c>261</c>
            <c>IPv6 interface address</c>
            <c>22/12</c>
            <c><xref target="RFC6119"></xref>/4.2</c>

            <c>262</c>
            <c>IPv6 neighbor address</c>
            <c>22/13</c>
            <c><xref target="RFC6119"></xref>/4.3</c>
          </texttable>
        </section>

        <section anchor="PREFIXDESC" title="Prefix Descriptors">
          <t>The 'Prefix descriptor' TLVs uniquely identify a Prefix (IPv4 or
          IPv6) originated by a Node.</t>

          <t>The following Prefix descriptor TLVs are valid in the IPv4/IPv6
          Prefix NLRI:</t>

          <texttable anchor="table_prefix_descriptor_tlv"
                     title="Prefix Descriptor TLVs">
            <ttcol align="center">TLV Code Point</ttcol>
            <ttcol align="left">Description</ttcol>
            <ttcol align="center">Length</ttcol>

            <c>264</c>
            <c>OSPF Route Type</c>
            <c>1</c>

            <c>265</c>
            <c>IP Reachability Information</c>
            <c>variable</c>
          </texttable>

            <t>The Prefix Descriptor TLVs are defined in the following sections. </t>

            <section title="OSPF Route Type">
              <t> OSPF Route Type is an optional TLV that MAY be present in
              Prefix NLRIs. It is used to identify the OSPF route-type of the
              prefix. It is used when an OSPF prefix is advertised in the OSPF
              domain with multiple different route-types. The Route Type TLV
              allows to discriminate these advertisements. The format of the
              OSPF Route Type TLV is shown in the following figure.</t>

              <figure anchor="ROUTETYPETLV" title="OSPF Route Type TLV Format">
                <artwork>
   0                   1                   2                   3
   0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
  |              Type             |             Length            |
  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
  |  Route Type   |
  +-+-+-+-+-+-+-+-+
                </artwork>
              </figure>

              <t>where the Type and Length fields of the TLV are defined in
              <xref target="table_prefix_descriptor_tlv"/>. The OSPF Route Type
              field values are defined in the OSPF protocol, and can be on of
              the following:

              <list style="hanging">
                <t>Intra-Area (0x1)</t>
                <t>Inter-Area (0x2)</t>
                <t>External 1 (0x3)</t>
                <t>External 2 (0x4)</t>
                <t>NSSA 1 (0x5)</t>
                <t>NSSA 2 (0x6)</t>
              </list>
              </t>
            </section>

            <section title="IP Reachability Information">
              <t>The IP Reachability Information is a mandatory TLV that
              contains one or more IP address prefixes (IPv4 or IPv6) originally
              advertised in the IGP topology. The format of the IP Reachability
              Information TLV is shown in the following figure.</t>

              <figure anchor="IPREACHABILITYTLV" title="IP Reachability Information TLV Format">
                <artwork>
   0                   1                   2                   3
   0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
  |              Type             |             Length            |
  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
  //                  IP Prefix Tuples (variable)                //
  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
                </artwork>
              </figure>
              <t>where the Type and Length fields of the TLV are defined in
              <xref target="table_prefix_descriptor_tlv"/>. The IP Prefix Tuples
              field determines the address-family reachability information, and
              is encoded as one or more 2-tuples of the form &lt;length,
              prefix&gt;, whose fields are described in the following
              figure:</t>

              <figure anchor="PREFIXNLRI" align="center" title="Prefix Tuple format">
                <artwork>
+---------------------------+
|   Length (1 octet)        |
+---------------------------+
|   Prefix (variable)       |
+---------------------------+
                </artwork>
              </figure>

              <t>The 'Length' field contains the length of the prefix in bits.
              Only the most significant octets of the prefix are encoded. I.e. 1
              octet for prefix length 1 up to 8, 2 octets for prefix length 9 to
              16, 3 octets for prefix length 17 up to 24 and 4 octets for prefix
              length 25 up to 32, etc.</t>
            </section>
        </section>
      </section>

      <section title="The LINK_STATE Attribute">
        <t>This is an optional, non-transitive BGP attribute that is used to
        carry link, node and prefix parameters and attributes. It is defined
        as a set of Type/Length/Value (TLV) triplets, described in the
        following section. This attribute SHOULD only be included with Link
        State NLRIs. This attribute MUST be ignored for all other NLRIs.</t>

        <section title="Node Attribute TLVs">
          <t>The following node attribute TLVs are defined:</t>

          <texttable anchor="node-attribute_tlv" title="Node Attribute TLVs">
            <ttcol align="center">TLV Code Point</ttcol>
            <ttcol align="left">Description</ttcol>
            <ttcol align="right">Length</ttcol>

            <c>1024</c>
            <c>Node Flag Bits</c>
            <c>1</c>

            <c>1025</c>
            <c>OSPF Specific Node Properties</c>
            <c>variable</c>

            <c>1026</c>
            <c>IS-IS Specific Node Properties</c>
            <c>variable</c>

            <c>1027</c>
            <c>IS-IS Area Address/Domain Identifier</c>
            <c>variable</c>
          </texttable>

          <section anchor="NODEFLAGBITS" title="Node Flag Bits TLV">
            <t>The Node Flag Bits TLV carries a bit mask describing node
            attributes. The value is a variable length bit array of flags, where
            each bit represents a node capability.</t>

            <figure anchor="node_flag_bits" title="Node Flag Bits TLV format">
              <artwork>
   0                   1                   2                   3
   0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
  |              Type             |             Length            | 
  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
  |O T E A          |  
  +-+-+-+-+-+-+-+-+-+
  </artwork>
            </figure>

            <t>The bits are defined as follows:</t>

            <texttable anchor="table_node_flag_bits_tlv"
                       title="Node Flag Bits Definitions">
              <ttcol align="center">Bit</ttcol>
              <ttcol align="left">Description</ttcol>
              <ttcol align="left">Reference</ttcol>

              <c>0</c>
              <c>Overload Bit (O)</c>
              <c><xref target="RFC1195"></xref></c>

              <c>1</c>
              <c>Attached Bit (T)</c>
              <c><xref target="RFC1195"></xref></c>

              <c>2</c>
              <c>External Bit (E)</c>
              <c><xref target="RFC2328"></xref></c>

              <c>3</c>
              <c>ABR Bit (A)</c>
              <c><xref target="RFC2328"></xref></c>
              
              <c>4-7</c>
              <c>Reserved for future use</c>
              <c></c>
            </texttable>
          </section>

          <section anchor="OSPFSPECIFICNODE"
                   title="OSPF Specific Node Properties TLV">
            <t>The OSPF Specific Node Properties TLV is an envelope that
            transparently carries optional node properties TLVs advertised by an
            OSPF router. The value field contains one or more optional OSPF node
            property TLVs, such as the OSPF Router Informational Capabilities
            TLV defined in <xref target="RFC4970"></xref>, or the OSPF TE Node
            Capability Descriptor TLV described in <xref
            target="RFC5073"></xref>. An originating router shall use this TLV
            for encoding information specific to the OSPF protocol or new OSPF
            extensions for which there is no protocol neutral representation in
            the BGP link-state NLRI.</t>

            <figure anchor="optional_ospf_node-property_tlv"
                    title="OSPF specific Node property format">
              <artwork>
   0                   1                   2                   3
   0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
  |              Type             |             Length            | 
  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
  //           OSPF specific node properties (variable)          //
  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
  </artwork>
            </figure>
          </section>

          <section anchor="ISISSPECIFICNODE"
                   title="IS-IS Specific Node Properties TLV">
            <t>The IS-IS Router Specific Node Properties TLV is an envelope that
            transparently carries optional node specific TLVs advertised by an
            IS-IS router. The value field contains one or more optional IS-IS
            node property TLVs, such as the IS-IS TE Node Capability Descriptor
            TLV described in <xref target="RFC5073"></xref>. An originating
            router shall use this TLV for encoding information specific to the
            IS-IS protocol or new IS-IS extensions for which there is no
            protocol neutral representation in the BGP link-state NLRI.</t>

            <figure anchor="optional_isis_node_property_tlv"
                    title="IS-IS specific Node property format">
              <artwork>
   0                   1                   2                   3
   0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
  |              Type             |             Length            | 
  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
  //          IS-IS specific node properties (variable)          //
  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
  </artwork>
            </figure>
          </section>

        </section>

        <section title="Link Attribute TLVs">
          <t>Each 'Link Attribute' is a Type/Length/Value (TLV) triplet
          formatted as defined in <xref target="TLV-section"></xref>. The
          format and semantics of the 'value' fields in some 'Link Attribute'
          TLVs correspond to the format and semantics of value fields in IS-IS
          Extended IS Reachability sub-TLVs, defined in <xref
          target="RFC5305"></xref> and <xref target="RFC5307"></xref>. Other
          'Link Attribute' TLVs are defined in this document. Although the
          encodings for 'Link Attribute' TLVs were originally defined for
          IS-IS, the TLVs can carry data sourced either by IS-IS or OSPF.</t>

          <t>The following 'Link Attribute' TLVs are are valid in the
          LINK_STATE attribute:</t>

          <texttable anchor="table_link_attribute_tlv"
                     title="Link Attribute TLVs">
            <ttcol align="center">TLV Code Point</ttcol>
            <ttcol align="left">Description</ttcol>
            <ttcol align="center">IS-IS TLV/Sub-TLV</ttcol>
            <ttcol align="left">Defined in:</ttcol>

            <c>1088</c>
            <c>Administrative group (color)</c>
            <c>22/3</c>
            <c><xref target="RFC5305"></xref>/3.1</c>

            <c>1089</c>
            <c>Maximum link bandwidth</c>
            <c>22/9</c>
            <c><xref target="RFC5305"></xref>/3.3</c>

            <c>1090</c>
            <c>Max. reservable link bandwidth</c>
            <c>22/10</c>
            <c><xref target="RFC5305"></xref>/3.5</c>

            <c>1091</c>
            <c>Unreserved bandwidth</c>
            <c>22/11</c>
            <c><xref target="RFC5305"></xref>/3.6</c>

            <c>1092</c>
            <c>TE Default Metric</c>
            <c>22/18</c>
            <c><xref target="RFC5305"></xref>/3.7</c>

            <c>1093</c>
            <c>Link Protection Type</c>
            <c>22/20</c>
            <c><xref target="RFC5307"></xref>/1.2</c>

            <c>1094</c>
            <c>MPLS Protocol Mask</c>
            <c>---</c>
            <c><xref target="MPLSPROTOTLV"></xref></c>

            <c>1095</c>
            <c>Metric</c>
            <c>---</c>
            <c><xref target="METTLV"></xref></c>

            <c>1096</c>
            <c>Shared Risk Link Group</c>
            <c>---</c>
            <c><xref target="SRLGTLV"></xref></c>

            <c>1097</c>
            <c>OSPF specific link attribute</c>
            <c>---</c>
            <c><xref target="OSPFLINKSPECIFIC"></xref></c>

            <c>1098</c>
            <c>IS-IS Specific Link Attribute</c>
            <c>---</c>
            <c><xref target="ISISLINKSPECIFIC"></xref></c>
          </texttable>

          <section anchor="MPLSPROTOTLV" title="MPLS Protocol Mask TLV">
            <t>The MPLS Protocol TLV carries a bit mask describing which MPLS
            signaling protocols are enabled. The length of this TLV is 1. The
            value is a bit array of 8 flags, where each bit represents an MPLS
            Protocol capability.</t>

            <figure anchor="MPLSPROTO" title="MPLS Protocol TLV">
              <artwork>
   0                   1                   2                   3
   0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
  |              Type             |             Length            | 
  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
  |L R            | 
  +-+-+-+-+-+-+-+-+
  </artwork>
            </figure>

            <t>The following bits are defined:</t>

            <texttable anchor="table_mpls_protocols_tlv"
                       title="MPLS Protocol Mask TLV Codes">
              <ttcol align="center">Bit</ttcol>
              <ttcol align="left">Description</ttcol>
              <ttcol align="left">Reference</ttcol>

              <c>0</c>
              <c>Label Distribution Protocol (LDP)</c>
              <c><xref target="RFC5036"></xref></c>

              <c>1</c>
              <c>Extension to RSVP for LSP Tunnels (RSVP-TE)</c>
              <c><xref target="RFC3209"></xref></c>

              <c>2-7</c>
              <c>Reserved for future use</c>
              <c></c>
            </texttable>
          </section>

          <section anchor="METTLV" title="Metric TLV">
            <t>The IGP Metric TLV carries the metric for this link. The length
            of this TLV is 3. If the length of the metric from which the IGP
            Metric value is derived is less than 3 (e.g. for OSPF link metrics
            or non-wide IS-IS metric), then the upper bits of the TLV are set to
            0.</t>

            <figure anchor="MET" title="Metric TLV format">
              <artwork>
   0                   1                   2                   3
   0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
  |              Type             |             Length            | 
  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
  |                  IGP Link Metric              | 
  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
  </artwork>
            </figure>
          </section>

          <section anchor="SRLGTLV" title="Shared Risk Link Group TLV">
            <t>The Shared Risk Link Group (SRLG) TLV carries the Shared Risk
            Link Group information (see Section 2.3, "Shared Risk Link Group
            Information", of <xref target="RFC4202"></xref>). It contains a data
            structure consisting of a (variable) list of SRLG values, where each
            element in the list has 4 octets, as shown in <xref
            target="SRLG"></xref>. The length of this TLV is 4 * (number of SRLG
            values).</t>

            <figure anchor="SRLG" title="Shared Risk Link Group TLV format">
              <artwork>
   0                   1                   2                   3
   0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
  |              Type             |             Length            | 
  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
  |                  Shared Risk Link Group Value                 | 
  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
  //                         ............                        // 
  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
  |                  Shared Risk Link Group Value                 | 
  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
  </artwork>
            </figure>

            <t>Note that there is no SRLG TLV in OSPF-TE. In IS-IS the SRLG
            information is carried in two different TLVs: the IPv4 (SRLG) TLV
            (Type 138) defined in <xref target="RFC5307"></xref>, and the IPv6
            SRLG TLV (Type 139) defined in <xref target="RFC6119"></xref>.
            Since the Link State NLRI uses variable Router-ID anchoring, both
            IPv4 and IPv6 SRLG information can be carried in a single TLV.</t>
          </section>

          <section anchor="OSPFLINKSPECIFIC"
                   title="OSPF Specific Link Attribute TLV">
            <t>The OSPF specific link attribute TLV is an envelope that
            transparently carries optional link properties TLVs advertised by an
            OSPF router. The value field contains one or more optional OSPF link
            attribute TLVs. An originating router shall use this TLV for
            encoding information specific to the OSPF protocol or new OSPF
            extensions for which there is no protocol neutral representation in
            the BGP link-state NLRI.</t>

            <figure anchor="OSPFLINKSPECIFICTLV"
                    title="OSPF specific link attribute format">
              <artwork>
   0                   1                   2                   3
   0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
  |              Type             |             Length            | 
  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
  //           OSPF specific link attributes (variable)          //
  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
            </artwork>
            </figure>
          </section>

          <section anchor="ISISLINKSPECIFIC"
                   title="IS-IS specific link attribute TLV">
            <t>The IS-IS specific link attribute TLV is an envelope that
            transparently carries optional link properties TLVs advertised by an
            IS-IS router. The value field contains one or more optional IS-IS
            link attribute TLVs. An originating router shall use this TLV for
            encoding information specific to the IS-IS protocol or new IS-IS
            extensions for which there is no protocol neutral representation in
            the BGP link-state NLRI.</t>

            <figure anchor="ISISLINKSPECIFICTLV"
                    title="IS-IS specific link attribute format">
              <artwork>
   0                   1                   2                   3
   0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
  |              Type             |             Length            | 
  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
  //          IS-IS specific link attributes (variable)          //
  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
            </artwork>
            </figure>
          </section>

          <section anchor="ISISAREA"
                   title="IS-IS Area TLV">
            <t>The area address is carried in the Area Identifier SubTLV of
            the Identifier TLV and consists of the Area Address which is
            assigned to the link. If more than one Area Addresses are present,
            only the lower address is encoded. Note that the Area Identifier
            TLV may appear in all NLRI types (Link, Node and Prefix).
            </t>

            <figure anchor="ISISAREAIDTLV" title="IS-IS Area Identifier TLV Format">
              <artwork>   0                   1                   2                   3
   0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
  |              Type             |             Length            |
  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
  //                Area Identifier (variable)                   //
  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
  </artwork>
            </figure>


          </section>
        </section>

        <section title="Prefix Attribute TLVs">
          <t>Prefixes are learned from the IGP topology (ISIS or OSPF) with a
          set of IGP attributes (such as metric, route tags, etc.) that MUST
          be reflected into the LINK_STATE attribute. This section describes
          the different attributes related to the IPv4/IPv6 prefixes. Prefix
          Attributes TLVs SHOULD be used when advertising NLRI types 3 and 4
          only. The following attributes TLVs are defined:</t>

          <texttable anchor="prefix-attribute_tlv"
                     title="Prefix Attribute TLVs">
            <ttcol align="center">TLV Code Point</ttcol>
            <ttcol align="left">Description</ttcol>
            <ttcol align="right">Length</ttcol>
            <ttcol align="left">Reference</ttcol>

            <c>1152</c>
            <c>IGP Flags</c>
            <c>4</c>
            <c><xref target="IGPFLAGSTLV"></xref></c>

            <c>1153</c>
            <c>Route Tag</c>
            <c>4*n</c>
            <c><xref target="RFC5130"></xref></c>

            <c>1154</c>
            <c>Extended Tag</c>
            <c>8*n</c>
            <c><xref target="RFC5130"></xref></c>

            <c>1155</c>
            <c>Prefix Metric</c>
            <c>4</c>
            <c><xref target="RFC5305"></xref></c>

            <c>1156</c>
            <c>OSPF Forwarding Address</c>
            <c>4</c>
            <c><xref target="RFC2328"></xref></c>

            <c>1157</c>
            <c>OSPF Specific Prefix Attribute</c>
            <c>variable</c>
            <c><xref target="IGPSPECIFICPRFXTLV"></xref></c>

            <c>1158</c>
            <c>IS-IS Specific Prefix Attribute</c>
            <c>variable</c>
            <c><xref target="IGPSPECIFICPRFXTLV"></xref></c>
          </texttable>

          <section anchor="IGPFLAGS" title="IGP Flags TLV">
            <t>IGP Flags TLV contains ISIS and OSPF flags and bits originally
            assigned to the prefix. The IGP Flags TLV is encoded as
            follows:</t>

            <figure anchor="IGPFLAGSTLV" title="IGP Flag TLV format">
              <artwork>
   0                   1                   2                   3
   0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
  |              Type             |             Length            | 
  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
  //                      IGP Flags (variable)                   // 
  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
  </artwork>
            </figure>

            <t>The value field contains bits defined according to the table
            below:</t>

            <texttable anchor="table_igp_flag_bits_tlv"
                       title="IGP Flag Bits Definitions">
              <ttcol align="center">Bit</ttcol>
              <ttcol align="left">Description</ttcol>
              <ttcol align="left">Reference</ttcol>

              <c>0</c>
              <c>ISIS Up/Down Bit</c>
              <c><xref target="RFC5305"></xref></c>

              <c>1-3</c>
              <c>OSPF Route Type</c>
              <c><xref target="RFC2328"></xref></c>

              <c>4-15</c>
              <c>RESERVED</c>
              <c></c>
            </texttable>

            <t>OSPF Route Type can be either: Intra-Area (0x1), Inter-Area
            (0x2), External 1 (0x3), External 2 (0x4), NSSA (0x5) and is
            encoded in a 3 bits number. For prefixes learned from IS-IS, this
            field MUST to be set to 0x0 on transmission.</t>
          </section>

          <section title="Route Tag">
            <t>Route Tag TLV carries the original IGP TAG (ISIS or OSPF) of
            the prefix and is encoded as follows:</t>

            <figure anchor="IGPROUTETAG" title="IGP Route TAG TLV format">
              <artwork>
   0                   1                   2                   3
   0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
  |              Type             |             Length            | 
  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
  |                     Route Tags (one or more)                  | 
  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
  </artwork>
            </figure>

            <t>Length is a multiple of 4.</t>

            <t>The value field contains one or more Route Tags as learned in the
            IGP topology.</t>
          </section>

          <section title="Extended Route Tag">
            <t>Extended Route Tag TLV carries the ISIS Extended Route TAG of
            the prefix and is encoded as follows:</t>

            <figure anchor="IGPEXTROUTETAG"
                    title="Extended IGP Route TAG TLV format">
              <artwork>
   0                   1                   2                   3
   0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
  |              Type             |             Length            | 
  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
  |                 Extended Route Tag (one or more)              | 
  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
  </artwork>
            </figure>

            <t>Length is a multiple of 8.</t>

            <t>The 'Extended Route Tag' field contains one or more Extended
            Route Tags as learned in the IGP topology.</t>
          </section>

          <section title="Prefix Metric TLV">
            <t>Prefix Metric TLV carries the metric of the prefix as known in
            the IGP topology. The attribute is mandatory and can only appear
            once.</t>

            <figure anchor="PREFIXMETRIC" title="Prefix Metric TLV Format">
              <artwork>
   0                   1                   2                   3
   0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
  |              Type             |             Length            | 
  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
  |                            Metric                             | 
  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
  </artwork>
            </figure>

            <t>Length is 4.</t>
          </section>

          <section title="OSPF Forwarding Address TLV">
            <t>OSPF Forwarding Address TLV carries the OSPF forwarding address
            as known in the original OSPF advertisement. Forwarding address
            can be either IPv4 or IPv6.</t>

            <figure anchor="OSPFFORWADDR"
                    title="OSPF Forwarding Address TLV Format">
              <artwork>
   0                   1                   2                   3
   0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
  |              Type             |             Length            | 
  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
  //                Forwarding Address (variable)                // 
  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
              </artwork>
            </figure>

            <t>Length is 4 for an IPv4 forwarding address an 16 for an IPv6
            forwarding address.</t>
          </section>

          <section anchor="IGPSPECIFICPRFX" title="OSPF and IS-IS Specific Prefix Information">

            <t>The OSPF and IS-IS Specific Prefix information TLVs contain
            prefix specific data carried in OSPF and IS-IS, respectively.  The
            format of the TLV is as follow:s</t>

            <figure anchor="IGPSPECIFICPRFXTLV"
                    title="OSPF and IS-IS Prefix Specific Data TLV Format">
              <artwork>
   0                   1                   2                   3
   0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
  |              Type             |             Length            | 
  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
  //              Prefix Specific Data  (variable)               // 
  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
              </artwork>
            </figure>

            <t>Length is 4 for an IPv4 forwarding address an 16 for an IPv6
            forwarding address.</t>
          </section>
        </section>
      </section>

      <section title="BGP Next Hop Information">
        <t>BGP link-state information for both IPv4 and IPv6 networks can be
        carried over either an IPv4 BGP session, or an IPv6 BGP session. If
        IPv4 BGP session is used, then the next hop in the MP_REACH_NLRI
        SHOULD be an IPv4 address. Similarly, if IPv6 BGP session is used,
        then the next hop in the MP_REACH_NLRI SHOULD be an IPv6 address.
        Usually the next hop will be set to the local end-point address of the
        BGP session. The next hop address MUST be encoded as described in
        <xref target="RFC4760"></xref>. The length field of the next hop
        address will specify the next hop address-family. If the next hop
        length is 4, then the next hop is an IPv4 address; if the next hop
        length is 16, then it is a global IPv6 address and if the next hop
        length is 32, then there is one global IPv6 address followed by a
        link-local IPv6 address. The link-local IPv6 address should be used as
        described in <xref target="RFC2545"></xref>.</t>

        <t>The BGP Next Hop attribute is used by each BGP-LS speaker to
        validate the NLRI it receives. However, this specification doesn't
        mandate any rule regarding the re-write of the BGP Next Hop
        attribute.</t>
      </section>

      <section title="Inter-AS Links">
        <t>The main source of TE information is the IGP, which is not active
        on inter-AS links. In order to inject a non-IGP enabled link into the
        BGP link-state RIB an implementation must support configuration of
        static links.</t>
      </section>
    </section>

    <section title="Link to Path Aggregation">
      <t>Distribution of all links available in the global Internet is
      certainly possible, however not desirable from a scaling and privacy
      point of view. Therefore an implementation may support link to path
      aggregation. Rather than advertising all specific links of a domain, an
      ASBR may advertise an "aggregate link" between a non-adjacent pair of
      nodes. The "aggregate link" represents the aggregated set of link
      properties between a pair of non-adjacent nodes. The actual methods to
      compute the path properties (of bandwidth, metric) are outside the scope
      of this document. The decision whether to advertise all specific links
      or aggregated links is an operator's policy choice. To highlight the
      varying levels of exposure, the following deployment examples shall be
      discussed.</t>

      <section title="Example: No Link Aggregation">
        <t>Consider <xref target="no-link-aggregation"></xref>. Both AS1 and
        AS2 operators want to protect their inter-AS {R1,R3}, {R2, R4} links
        using RSVP-FRR LSPs. If R1 wants to compute its link-protection LSP to
        R3 it needs to "see" an alternate path to R3. Therefore the AS2
        operator exposes its topology. All BGP TE enabled routers in AS1 "see"
        the full topology of AS and therefore can compute a backup path. Note
        that the decision if the direct link between {R3, R4} or the {R4, R5,
        R3) path is used is made by the computing router.</t>

        <figure anchor="no-link-aggregation" title="no-link-aggregation">
          <artwork>
       AS1   :   AS2
             :
        R1-------R3
         |   :   | \ 
         |   :   |  R5
         |   :   | /
        R2-------R4
             :
             :
	     </artwork>
        </figure>
      </section>

      <section title="Example: ASBR to ASBR Path Aggregation">
        <t>The brief difference between the "no-link aggregation" example and
        this example is that no specific link gets exposed. Consider <xref
        target="asbr-link-aggregation"></xref>. The only link which gets
        advertised by AS2 is an "aggregate" link between R3 and R4. This is
        enough to tell AS1 that there is a backup path. However the actual
        links being used are hidden from the topology.</t>

        <figure anchor="asbr-link-aggregation" title="asbr-link-aggregation">
          <artwork>
       AS1   :   AS2
             :
        R1-------R3
         |   :   |
         |   :   |
         |   :   |
        R2-------R4
             :
             :
	 </artwork>
        </figure>
      </section>

      <section title="Example: Multi-AS Path Aggregation">
        <t>Service providers in control of multiple ASes may even decide to
        not expose their internal inter-AS links. Consider <xref
        target="multi-as-aggregation"></xref>. AS3 is modeled as a single node
        which connects to the border routers of the aggregated domain. <figure
            anchor="multi-as-aggregation" title="multi-as-aggregation">
            <artwork>
       AS1   :   AS2   :   AS3 
             :         :
        R1-------R3-----   
         |   :         : \ 
         |   :         :   vR0
         |   :         : /
        R2-------R4-----
             :         :
             :         :
	     </artwork>
          </figure></t>
      </section>
    </section>

    <section anchor="IANA" title="IANA Considerations">
      <t>This document requests a code point from the registry of Address
      Family Numbers.</t>

      <t>This document requests a code point from the BGP Path Attributes
      registry.</t>

      <t>This document requests creation of a new registry for node anchor, link
      descriptor and link attribute TLVs. Values 0-255 are reserved.  Values
      256-65535 will be used for Codepoints. The registry will be initialized as
      shown in <xref target="BGPLSCODEPOINTS"/>. Allocations within the registry
      will require documentation of the proposed use of the allocated value and
      approval by the Designated Expert assigned by the IESG (see <xref
      target="RFC5226"></xref>).</t>

      <t>Note to RFC Editor: this section may be removed on publication as an
      RFC.</t>
    </section>

    <section anchor="Manageability" title="Manageability Considerations">
      <t>This section is structured as recommended in <xref
      target="RFC5706"></xref>.</t>

      <section anchor="Operational-Considerations"
               title="Operational Considerations">
        <section anchor="Operations" title="Operations">
          <t>Existing BGP operation procedures apply. No new operation
          procedures are defined in this document. It shall be noted that the
          NLRI information present in this document purely carries application
          level data that have no immediate corresponding forwarding state
          impact. As such, any churn in reachability information has different
          impact than regular BGP update which needs to change forwarding state
          for an entire router. Furthermore it is anticipated that distribution
          of this NLRI will be handled by dedicated route-reflectors providing a
          level of isolation and fault-containment between different NLRI
          types.</t>
        </section>

        <section anchor="Initial-Setup" title="Installation and Initial Setup">
          <t>Configuration parameters defined in <xref
          target="Configuration-Management"></xref> SHOULD be initialized to
          the following default values: <list style="symbols">
              <t>The Link-State NLRI capability is turned off for all
              neighbors.</t>

              <t>The maximum rate at which Link State NLRIs will be
              advertised/withdrawn from neighbors is set to 200 updates per
              second.</t>
            </list></t>
        </section>

        <section anchor="Migration-Path" title="Migration Path">
          <t>The proposed extension is only activated between BGP peers after
          capability negotiation. Moreover, the extensions can be turned
          on/off an individual peer basis (see <xref
          target="Configuration-Management"></xref>), so the extension can be
          gradually rolled out in the network.</t>
        </section>

        <section anchor="Other-Protocols"
                 title="Requirements on Other Protocols and Functional Components">
          <t>The protocol extension defined in this document does not put new
          requirements on other protocols or functional components.</t>
        </section>

        <section anchor="Network-Operation"
                 title="Impact on Network Operation">
          <t>Frequency of Link-State NLRI updates could interfere with regular
          BGP prefix distribution. A network operator MAY use a dedicated
          Route-Reflector infrastructure to distribute Link-State NLRIs.</t>

          <t>Distribution of Link-State NLRIs SHOULD be limited to a single
          admin domain, which can consist of multiple areas within an AS or
          multiple ASes.</t>
        </section>

        <section anchor="Verifying-Correct-Operation"
                 title="Verifying Correct Operation">
          <t>Existing BGP procedures apply. In addition, an implementation
          SHOULD allow an operator to: <list style="symbols">
              <t>List neighbors with whom the Speaker is exchanging Link-State
              NLRIs</t>
            </list></t>
        </section>
      </section>

      <section anchor="Management-Considerations"
               title="Management Considerations">
        <section anchor="Management-Information"
                 title="Management Information"></section>

        <section anchor="Fault-Management" title="Fault Management">
          <t>TBD.</t>
        </section>

        <section anchor="Configuration-Management"
                 title="Configuration Management">
          <t>An implementation SHOULD allow the operator to specify neighbors
          to which Link-State NLRIs will be advertised and from which
          Link-State NLRIs will be accepted.</t>

          <t>An implementation SHOULD allow the operator to specify the
          maximum rate at which Link State NLRIs will be advertised/withdrawn
          from neighbors</t>

          <t>An implementation SHOULD allow the operator to specify the
          maximum number of Link State NLRIs stored in router's RIB.</t>

          <t>An implementation SHOULD allow the operator to create abstracted
          topologies that are advertised to neighbors; Create different
          abstractions for different neighbors.</t>

          <t>An implementation SHOULD allow the operator to configure a pair
          of ASN and BGP identifier per flooding set the node participates
          in.</t>
        </section>

        <section anchor="Accounting-Management" title="Accounting Management">
          <t>Not Applicable.</t>
        </section>

        <section anchor="Performance-Management"
                 title="Performance Management">
          <t>An implementation SHOULD provide the following statistics: <list
              style="symbols">
              <t>Total number of Link-State NLRI updates sent/received</t>

              <t>Number of Link-State NLRI updates sent/received, per
              neighbor</t>

              <t>Number of errored received Link-State NLRI updates, per
              neighbor</t>

              <t>Total number of locally originated Link-State NLRIs</t>
            </list></t>
        </section>

        <section anchor="Security-Management" title="Security Management">
          <t>An operator SHOULD define ACLs to limit inbound updates as
          follows: <list style="symbols">
              <t>Drop all updates from Consumer peers</t>
            </list></t>
        </section>
      </section>
    </section>

    <section anchor="TLVSUMMARY" title="TLV/SubTLV Code Points Summary">
      <t>This section contains the global table of all TLVs/SubTLVs defined in
      this document.</t>

      <texttable anchor="BGPLSCODEPOINTS"
                 title="Summary Table of TLV/SubTLV Codepoints">
        <ttcol align="center">TLV Code Point</ttcol>
        <ttcol align="left">Description</ttcol>
        <ttcol align="center">IS-IS TLV/Sub-TLV</ttcol>
        <ttcol align="left">Value defined in:</ttcol>

        <!-- NLRI TLVs -->
        <c>256</c>
        <c>Local Node Descriptors</c>
        <c>---</c><c>
        <xref target="LOCALNODEDESC"></xref></c>
        
        <c>257</c>
        <c>Remote Node Descriptors</c>
        <c>---</c>
        <c><xref target="REMOTENODEDESC"></xref></c>

        <c>258</c>
        <c>Link Local/Remote Identifiers</c>
        <c>22/4</c>
        <c><xref target="RFC5307"></xref>/1.1</c>

        <c>259</c>
        <c>IPv4 interface address</c>
        <c>22/6</c>
        <c><xref target="RFC5305"></xref>/3.2</c>

        <c>260</c>
        <c>IPv4 neighbor address</c>
        <c>22/8</c>
        <c><xref target="RFC5305"></xref>/3.3</c>

        <c>261</c>
        <c>IPv6 interface address</c>
        <c>22/12</c>
        <c><xref target="RFC6119"></xref>/4.2</c>

        <c>262</c>
        <c>IPv6 neighbor address</c>
        <c>22/13</c>
        <c><xref target="RFC6119"></xref>/4.3</c>

        <c>263</c>
        <c>Multi Topology ID</c>
        <c>---</c>
        <c><xref target="MTIDTLV"></xref></c>

        <c>264</c>
        <c>OSPF Route Type</c>
        <c>---</c>
        <c><xref target="PREFIXDESC"></xref></c>

        <c>265</c>
        <c>IP Reachability Information</c>
        <c>---</c>
        <c><xref target="PREFIXDESC"></xref></c>

        <!-- NLRI SubTLVs -->

        <c>512</c>
        <c>Autonomous System</c>
        <c>---</c>
        <c><xref target="node_desc_tlvs"></xref></c>

        <c>513</c>
        <c>BGP Identifier</c>
        <c>---</c>
        <c><xref target="node_desc_tlvs"></xref></c>

        <c>514</c>
        <c>ISO Node-ID</c>
        <c>---</c>
        <c><xref target="node_desc_tlvs"></xref></c>

        <c>515</c>
        <c>IPv4 Router-ID</c>
        <c>---</c>
        <c><xref target="node_desc_tlvs"></xref></c>

        <c>516</c>
        <c>IPv6 Router-ID</c>
        <c>---</c>
        <c><xref target="node_desc_tlvs"></xref></c>

        <c>517</c>
        <c>Area ID</c>
        <c>---</c>
        <c><xref target="node_desc_tlvs"></xref></c>

        <c>518</c>
        <c>Multi-Topology ID</c>
        <c>---</c>
        <c><xref target="node_desc_tlvs"></xref></c>

        <!-- Link State Attribute TLVs -->

        <!-- Node Attributes TLVs -->
        <c>1024</c>
        <c>Node Flag Bits</c>
        <c>---</c>
        <c><xref target="NODEFLAGBITS"></xref></c>

        <c>1025</c>
        <c>OSPF Specific Node Properties</c>
        <c>---</c>
        <c><xref target="OSPFSPECIFICNODE"></xref></c>

        <c>1026</c>
        <c>IS-IS Specific Node Properties</c>
        <c>---</c>
        <c><xref target="ISISSPECIFICNODE"></xref></c>

        <c>1027</c>
        <c>IS-IS Area Address/Domain Identifier</c>
        <c>variable</c>
        <c>XXX: Do we need this? No definition</c>
 
       <!-- Link  Attribute TLVs -->

        <c>1088</c>
        <c>Administrative group (color)</c>
        <c>22/3</c>
        <c><xref target="RFC5305"></xref>/3.1</c>

        <c>1089</c>
        <c>Maximum link bandwidth</c>
        <c>22/9</c>
        <c><xref target="RFC5305"></xref>/3.3</c>

        <c>1090</c>
        <c>Max. reservable link bandwidth</c>
        <c>22/10</c>
        <c><xref target="RFC5305"></xref>/3.5</c>

        <c>1091</c>
        <c>Unreserved bandwidth</c>
        <c>22/11</c>
        <c><xref target="RFC5305"></xref>/3.6</c>

        <c>1092</c>
        <c>TE Default Metric</c>
        <c>22/18</c>
        <c><xref target="RFC5305"></xref>/3.7</c>

        <c>1093</c>
        <c>Link Protection Type</c>
        <c>22/20</c>
        <c><xref target="RFC5307"></xref>/1.2</c>

        <c>1094</c>
        <c>MPLS Protocol Mask</c>
        <c>---</c>
        <c><xref target="MPLSPROTOTLV"></xref></c>

        <c>1095</c>
        <c>Metric</c>
        <c>---</c>
        <c><xref target="METTLV"></xref></c>

        <c>1096</c>
        <c>Shared Risk Link Group</c>
        <c>---</c>
        <c><xref target="SRLGTLV"></xref></c>

        <c>1097</c>
        <c>OSPF specific link attribute</c>
        <c>---</c>
        <c><xref target="OSPFLINKSPECIFIC"></xref></c>

        <c>1098</c>
        <c>IS-IS Specific Link Attribute</c>
        <c>---</c>
        <c><xref target="ISISLINKSPECIFIC"></xref></c>

        <!-- Prefix Attributes TLVs -->

        <c>1152</c>
        <c>IGP Flags</c>
        <c>---</c>
        <c><xref target="IGPFLAGS"></xref></c>

        <c>1153</c>
        <c>Route Tag</c>
        <c>---</c>
        <c><xref target="RFC5130"></xref></c>

        <c>1154</c>
        <c>Extended Tag</c>
        <c>---</c>
        <c><xref target="RFC5130"></xref></c>

        <c>1155</c>
        <c>Prefix Metric</c>
        <c>---</c>
        <c><xref target="RFC5305"></xref></c>

        <c>1156</c>
        <c>OSPF Forwarding Address</c>
        <c>---</c>
        <c><xref target="RFC2328"></xref></c>

        <c>1157</c>
        <c>OSPF Specific Prefix Attribute</c>
        <c>---</c>
        <c><xref target="IGPSPECIFICPRFX"></xref></c>

        <c>1158</c>
        <c>IS-IS Specific Prefix Attribute</c>
        <c>---</c>
        <c><xref target="IGPSPECIFICPRFX"></xref></c>

      </texttable>
    </section>

    <section anchor="Security" title="Security Considerations">
      <t>Procedures and protocol extensions defined in this document do not
      affect the BGP security model.</t>

      <t>A BGP Speaker SHOULD NOT accept updates from a Consumer peer.</t>

      <t>An operator SHOULD employ a mechanism to protect a BGP Speaker
      against DDOS attacks from Consumers.</t>
    </section>

    <section anchor="Contributors" title="Contributors">
      <t>We would like to thank Robert Varga for the significant contribution
      he gave to this document.</t>
    </section>

    <section anchor="Acknowledgements" title="Acknowledgements">
      <t>We would like to thank Nischal Sheth, Alia Atlas, David Ward, Derek
      Yeung, Murtuza Lightwala, John Scudder, Kaliraj Vairavakkalai, Les
      Ginsberg, Liem Nguyen, Manish Bhardwaj, Mike Shand, Peter Psenak, Rex
      Fernando, Richard Woundy, Steven Luong, Tamas Mondal, Waqas Alam, Vipin
      Kumar, Naiming Shen, Balaji Rajagopalan and Yakov Rekhter for their comments.</t>
    </section>
  </middle>

  <back>
    <references title="Normative References">
      <?rfc include="http://xml.resource.org/public/rfc/bibxml/reference.RFC.5130.xml"?>

      <?rfc include="http://xml.resource.org/public/rfc/bibxml/reference.RFC.6822"?>

      <?rfc ?>

      <?rfc include="http://xml.resource.org/public/rfc/bibxml/reference.RFC.2545.xml"?>

      <?rfc ?>

      <?rfc include="http://xml.resource.org/public/rfc/bibxml/reference.RFC.1195.xml"?>

      <?rfc include="http://xml.resource.org/public/rfc/bibxml/reference.RFC.1918.xml"?>

      <?rfc include="http://xml.resource.org/public/rfc/bibxml/reference.RFC.2119.xml"?>

      <?rfc include="http://xml.resource.org/public/rfc/bibxml/reference.RFC.2328.xml"?>

      <?rfc include="http://xml.resource.org/public/rfc/bibxml/reference.RFC.3209.xml"?>

      <?rfc include="http://xml.resource.org/public/rfc/bibxml/reference.RFC.4202.xml"?>

      <?rfc include="http://xml.resource.org/public/rfc/bibxml/reference.RFC.4271.xml"?>

      <?rfc include="http://xml.resource.org/public/rfc/bibxml/reference.RFC.4760.xml"?>

      <?rfc ?>

      <?rfc include="http://xml.resource.org/public/rfc/bibxml/reference.RFC.4915.xml"?>

      <?rfc include="http://xml.resource.org/public/rfc/bibxml/reference.RFC.5036.xml"?>

      <?rfc ?>

      <?rfc include="http://xml.resource.org/public/rfc/bibxml/reference.RFC.5120.xml"?>

      <?rfc include="http://xml.resource.org/public/rfc/bibxml/reference.RFC.5305.xml"?>

      <?rfc include="http://xml.resource.org/public/rfc/bibxml/reference.RFC.5226.xml"?>

      <?rfc include="http://xml.resource.org/public/rfc/bibxml/reference.RFC.5307.xml"?>

      <?rfc include="http://xml.resource.org/public/rfc/bibxml/reference.RFC.6119.xml"?>
    </references>

    <references title="Informative References">
      <?rfc include="http://xml.resource.org/public/rfc/bibxml3/reference.I-D.draft-ietf-alto-protocol-13.xml"?>

      <?rfc ?>

      <?rfc include="http://xml.resource.org/public/rfc/bibxml/reference.RFC.4655.xml"?>

      <?rfc ?>

      <?rfc include="http://xml.resource.org/public/rfc/bibxml/reference.RFC.4970.xml"?>

      <?rfc include="http://xml.resource.org/public/rfc/bibxml/reference.RFC.5073.xml"?>

      <?rfc include="http://xml.resource.org/public/rfc/bibxml/reference.RFC.5152.xml"?>

      <?rfc include="http://xml.resource.org/public/rfc/bibxml/reference.RFC.5693.xml"?>

      <?rfc include="http://xml.resource.org/public/rfc/bibxml/reference.RFC.5706.xml"?>

      <?rfc include="http://xml.resource.org/public/rfc/bibxml/reference.RFC.6549.xml"?>
    </references>
  </back>
</rfc>
